---
- name: Set grub install devices on BIOS systems
  ansible.builtin.debconf:
    name: "grub-pc"
    question: "grub-pc/install_devices"
    vtype: "multiselect"
    value: "{{ grub_install_devices | join(', ') }}"
  notify: install grub
  when:
    - grub_install_devices | length >= 1
    - ansible_facts.packages is not search('grub-efi')

- name: Set grub install devices on UEFI systems
  ansible.builtin.debconf:
    name: "grub-pc"
    question: "grub-efi/install_devices"
    vtype: "multiselect"
    value: "{{ grub_install_devices | join(', ') }}"
  notify: install grub-efi
  when:
    - grub_install_devices | length >= 1
    - ansible_facts.packages is search('grub-efi')

- name: Set linux cmdline default options
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    backrefs: true
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="((?!.*{{ item }}.*).*)"$'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="\1 {{ item }}"'
  loop: "{{ grub_cmdline }}"
  notify: update-grub

- name: Set grub serial console
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  loop:
    - regexp: '^GRUB_TERMINAL='
      line: 'GRUB_TERMINAL=serial'
    - regexp: '^GRUB_SERIAL_COMMAND='
      line: 'GRUB_SERIAL_COMMAND="{{ grub_serial_console }}"'
  loop_control:
    label: "{{ item.line }}"
  when: grub_serial_console | length >= 1
  notify: update-grub
