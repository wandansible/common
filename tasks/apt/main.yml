---
- name: Install https support for apt
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
    state: present
  when: >
    not (ansible_distribution == "Debian" and ansible_distribution_version is version('10', '>='))

- name: Install gnupg on newer ubuntu/debian
  ansible.builtin.apt:
    pkg:
      - gnupg
    state: present
  when: >
    (ansible_distribution == "Debian" and ansible_distribution_version is version('9', '>=')) or
    (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('18.04', '>='))

- name: Install gnupg2 on older ubuntu/debian
  ansible.builtin.apt:
    pkg:
      - gnupg2
    state: present
  when: >
    (ansible_distribution == "Debian" and ansible_distribution_version is version('9', '<')) or
    (ansible_distribution == "Ubuntu" and ansible_distribution_version is version('18.04', '<'))

- name: "Create apt keyrings directory"
  ansible.builtin.file:
    path: "/etc/apt/keyrings/"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Configure apt mirror
  ansible.builtin.template:
    src: "templates/sources.list.{{ ansible_lsb.id | lower }}"
    dest: /etc/apt/sources.list
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  when: ansible_os_family == "Debian"
  register: apt_mirror

- name: Refresh apt cache when mirror changes  # noqa no-handler
  ansible.builtin.apt:
    update_cache: true
  when: apt_mirror.changed

- name: Install needrestart
  ansible.builtin.apt:
    pkg: needrestart
    install_recommends: false
    state: present

- name: Install lsb-release
  ansible.builtin.apt:
    pkg: lsb-release
    state: present

- name: Install intel microcode on physical hosts with an Intel CPU
  ansible.builtin.apt:
    pkg: "intel-microcode"
  when:
    - "ansible_virtualization_role == 'host'"
    - "ansible_processor | lower is search('intel')"

- name: Install amd64 microcode on physical hosts with an AMD CPU
  ansible.builtin.apt:
    pkg: "amd64-microcode"
  when:
    - "ansible_virtualization_role == 'host'"
    - "ansible_processor | lower is search('amd')"

- name: Install NIC specific packages when required
  ansible.builtin.apt:
    pkg: "{{ item.package }}"
    install_recommends: false
  when:
    - "item.module in loaded_nic_kmods | json_query('[*].module')"
    - "ansible_distribution | lower in item.distributions"
  loop: "{{ nic_packages }}"
  loop_control:
    label: "{{ item.module }}"

- name: Add additional apt repos
  ansible.builtin.include_tasks:
    file: add-repo.yml
  loop: "{{ apt_repos }}"
  loop_control:
    label: "{{ item.name }}"

- name: Install packages
  ansible.builtin.apt:
    pkg: "{{ packages_install }}"
    state: present

- name: Upgrade packages  # noqa package-latest
  ansible.builtin.apt:
    pkg: "{{ packages_upgrade }}"
    state: latest

- name: Remove packages
  ansible.builtin.apt:
    pkg: "{{ packages_remove }}"
    state: absent

- name: Purge packages
  ansible.builtin.apt:
    pkg: "{{ packages_purge }}"
    purge: true
    state: absent
